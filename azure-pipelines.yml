trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

variables:
  solution: "**/*.sln"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"
  majorVersion: 1
  minorVersion: 0
  patchVersion: $[counter(variables['minorVersion'], 0)]
  version: $(majorVersion).$(minorVersion).$(patchVersion)

name: $(majorVersion).$(minorVersion).$(patchVersion)

steps:
  - task: UseDotNet@2
    inputs:
      packageType: "sdk"
      version: "8.0.x"

  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '$(solution)'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '$(solution)'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    inputs:
      command: "pack"
      packagesToPack: "Htmx.Components.csproj"
      versioningScheme: "byBuildNumber"
      configuration: "$(buildConfiguration)"

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "drop"
      publishLocation: "Container"

  - script: |
      dotnet nuget push "$(Build.ArtifactStagingDirectory)/**/*.nupkg" \
        --api-key "$(NUGET_API_KEY)" \
        --source "https://api.nuget.org/v3/index.json" \
        --skip-duplicate
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    displayName: 'Push NuGet package to NuGet.org'
    env:
      NUGET_API_KEY: $(NUGET_API_KEY)
